amends ".../Typings.pkl"

import ".../Entities/Structures/Piping/Atmos/constants.pkl"

local typealias PipeLayer = constants.PipeLayer

content {
    new ConstructionGraphPrototype {
        id = "GasTrinary"
        start = "start"
        graph {
            new ConstructionGraphNode {
                node = "start"
                edges {
                    generateFilterEdge(0)
                    generateFilterEdge(1)
                    generateFilterEdge(2)
                    generateFilterEdge(3)
                    generateFilterEdge(4)

                    generateFilterFlippedEdge(0)
                    generateFilterFlippedEdge(1)
                    generateFilterFlippedEdge(2)
                    generateFilterFlippedEdge(3)
                    generateFilterFlippedEdge(4)
                }
            }

            generateFilterNode(0)
            generateFilterNode(1)
            generateFilterNode(2)
            generateFilterNode(3)
            generateFilterNode(4)

            generateFilterFlippedNode(0)
            generateFilterFlippedNode(1)
            generateFilterFlippedNode(2)
            generateFilterFlippedNode(3)
            generateFilterFlippedNode(4)
        }
    }
}

local const function generateFilterEdge(l: PipeLayer): ConstructionGraphEdge = new {
    to = "filter\(l)"
    steps {
        new MaterialConstructionGraphStep {
            material = "Steel"
            amount = 2
            doAfter = 1.0
        }
    }
}

local const function generateFilterNode(l: PipeLayer): ConstructionGraphNode = new {
    node = "filter\(l)"
    entity = new StaticNodeEntity {
        id = "GasFilter\(l)"
    }
    edges {
        new ConstructionGraphEdge {
            to = "start"
            conditions {
                new EntityAnchored {
                    anchored = false
                }
            }
            completed {
                new SpawnPrototype {
                    prototype = "SheetSteel1"
                    amount = 2
                }
                new DeleteEntity {}
            }
            steps {
                new ToolConstructionGraphStep {
                    tool = "Welding"
                    doAfter = 1.0
                }
            }
        }
    }
}

local const function generateFilterFlippedEdge(l: PipeLayer): ConstructionGraphEdge = new {
    to = "filterflipped\(l)"
    steps {
        new MaterialConstructionGraphStep {
            material = "Steel"
            amount = 2
            doAfter = 1.0
        }
    }
}

local const function generateFilterFlippedNode(l: PipeLayer): ConstructionGraphNode = new {
    node = "filterflipped\(l)"
    entity = new StaticNodeEntity {
        id = "GasFilterFlipped\(l)"
    }
    edges {
        new ConstructionGraphEdge {
            to = "start"
            conditions {
                new EntityAnchored {
                    anchored = false
                }
            }
            completed {
                 new SpawnPrototype {
                     prototype = "SheetSteel1"
                     amount = 2
                 }
                new DeleteEntity {}
            }
            steps {
                new ToolConstructionGraphStep {
                    tool = "Welding"
                    doAfter = 1.0
                }
            }
        }
    }
}
