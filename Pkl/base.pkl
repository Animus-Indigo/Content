module base

import "typings.pkl"

content: Listing<typings.Prototype|typings.EntityPrototype> = new {}

local const function RenderTaggedClass(v: typings.TaggedClass): Any = new Mapping {
    [new RenderDirective { text = "!type" }] = new RenderDirective { text = v.getClass().simpleName }
    ...v.toMap()
}

output {
    value = content
    renderer = new YamlRenderer {
        converters {
            [typings.Vector2] = (v) -> "\(v.x),\(v.y)"
            [typings.Vector2i] = (v) -> "\(v.x),\(v.y)"
            [typings.Vector3] = (v) -> "\(v.x),\(v.y),\(v.z)"
            [typings.Box2] = (v) -> "\(v.left),\(v.bottom),\(v.right),\(v.top)"
            [typings.Box2i] = (v) -> "\(v.left),\(v.bottom),\(v.right),\(v.top)"
            [typings.TaggedClass] = (v) -> RenderTaggedClass(v)
        }
    }
}
